<differences>
    <!--
        documentation at https://www.mojohaus.org/clirr-maven-plugin/examples/ignored-differences.html
    -->

    <difference>
        <!-- It is okay to add classes to the set of superclasses -->
        <className>**</className>
        <differenceType>5000</differenceType>
        <to>**</to>
    </difference>
    <difference>
        <!-- It is okay to add methods to an interface-->
        <className>**</className>
        <differenceType>7012</differenceType>
        <method>*</method>
    </difference>
    <difference>
        <!-- It is okay to add abstract methods to an abstract class -->
        <className>**</className>
        <differenceType>7013</differenceType>
        <method>*</method>
    </difference>

    <difference>
        <!-- It is okay to add abstract methods to an abstract class -->
        <className>VASSAL/build/module/GameRefresher</className>
        <differenceType>7002</differenceType>
        <method>java.util.List getCurrentGameRefresherPieces()</method>
  </difference>

  <difference>
        <className>VASSAL/tools/image/tilecache/FileArchiveImageTiler</className>
        <differenceType>7005</differenceType>
        <method>void run(VASSAL.tools.io.FileArchive, java.lang.String, int, int, java.lang.String[], java.util.concurrent.ExecutorService, VASSAL.tools.image.ImageLoader, VASSAL.tools.image.tilecache.TileSlicer, VASSAL.tools.lang.Callback, VASSAL.tools.lang.Callback, VASSAL.tools.lang.Callback)</method>
        <to>void run(VASSAL.tools.io.FileArchive, java.lang.String, int, int, java.lang.Iterable, java.util.concurrent.ExecutorService, VASSAL.tools.image.ImageLoader, VASSAL.tools.image.tilecache.TileSlicer, VASSAL.tools.lang.Callback, VASSAL.tools.lang.Callback, VASSAL.tools.lang.Callback)</to>
        <justification>Nothing external should use this</justification>
    </difference>

</differences>
